# -*- coding: utf-8 -*-
"""Python_Basic_Prgg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GFd-zkHw48tr9byNHg-CP5p4Mie4D89B
"""

print()

x = int(input())
y = int(input())

x = x // y
y = y // x

print(y)

x = int(input())
y = int(input())

x = x / y
y = y / x

print(y)

z = y = x = 1
print(x, y, z, sep='*')

x = int(input())
y = int(input())

x = x % y
x = x % y
y = y % x

print(y)

def fun(x):
    if x % 2 == 0:
        return 1
    else:
        return


print(fun(fun(2)) + 1)

try:
    value = input("Enter a value: ")
    print(value/value)
except ValueError:
    print("Bad input...")
except ZeroDivisionError:
    print("Very bad input...")
except TypeError:
    print("Very very bad input...")
except:
    print("Booo!")

dictionary = {'one': 'two', 'three': 'one', 'two': 'three'}
v = dictionary['one']

for k in range(len(dictionary)):
    v = dictionary[v]

print(v)

def function_1(a):
    return None


def function_2(a):
    return function_1(a) * function_1(a)


print(function_2(2))

my_list = [1, 2]

for v in range(2):
    my_list.insert(-1, my_list[v])

print(my_list)

print(1 // 2)

def func(a, b):
    return b ** a


print(func(b=2, 2))

z = 0
y = 10
x = y < z and z > y or y < z and z < y
print(x)

my_list = [x * x for x in range(5)]


def fun(lst):
    del lst[lst[2]]
    return lst


print(fun(my_list))

x = 1
y = 2
x, y, z = x, x, y
z, y, z = x, y, z

print(x, y, z)

a = 1
b = 0
a = a ^ b
b = a ^ b
a = a ^ b

print(a, b)

def fun(x):
    if x % 2 == 0:
        return 1
    else:
        return 2


print(fun(fun(2)))

nums = [1, 2, 3]
vals = nums
del vals[:]

x = int(input())
y = int(input())
x = x % y
x = x % y
y = y % x
print(y)

y = input()
x = input()
print(x + y)

3

x = 1 // 5 + 1 / 5
print(x)

x = float(input())
y = float(input())
print(y ** (1 / x))

dct = {'one': 'two', 'three': 'one', 'two': 'three'}
v = dct['three']

for k in range(len(dct)):
    v = dct[v]

print(v)

lst = [i for i in range(-1, -2)]
len(lst)



def fun(a, b, c=0):
  print(a,b,c)
fun(b=0, a=0)
#fun(b=1)
#fun()
fun(0,1,2)

def fun(x, y):
    if x == y:
        return x
    else:
        return fun(x, y-1)
print(fun(0, 3))

i = 0
while i < i + 2 :
    i += 1
    print("*")
else:
    print("*")

tup = (1, 2, 4, 8)
tup = tup[-2:-1]
tup = tup[-1]
print(tup)

dd = {"1": "0", "0": "1"}
for x in dd.vals():
    print(x, end="")

dct = {}
dct['1'] = (1, 2)
dct['2'] = (2, 1)

for x in dct.keys():
    print(dct[x][1], end="")

def fun(inp=2, out=3):
    return inp * out


print(fun(out=2))

lst = [[x for x in range(3)] for y in range(3)]

for r in range(3):
    for c in range(3):
        if lst[r][c] % 2 != 0:
            print("#")

try:
    value = input("Enter a value: ")
    print(int(value)/len(value))
except ValueError:
    print("Bad input...")
except ZeroDivisionError:
    print("Very bad input...")
except TypeError:
    print("Very very bad input...")
except:
    print("Booo!")



try:
    print(5/0)
    break
except:
    print("Sorry, something went wrong...")
except (ValueError, ZeroDivisionError):
    print("Too bad...")

print(Hello, World!)

dictionary = {}
my_list = ['a', 'b', 'c', 'd']

for i in range(len(my_list) - 1):
    dictionary[my_list[i]] = (my_list[i], )

for i in sorted(dictionary.keys()):
    k = dictionary[i]
    print(k[0])

def fun(x):
    if x % 2 == 0:
        return 1
    else:
        return


print(fun(fun(2)) + 1)

def function(x=0):
    return x
function()

tup = 1, 2, 3, 2, 4, 5, 6, 2, 7, 2, 8, 9
duplicates = tup.count(2)

print(duplicates)    # outputs: 4

d1 = {'Adam Smith': 'A', 'Judy Paxton': 'B+'}
d2 = {'Mary Louis': 'A', 'Patrick White': 'C'}
d3 = {}

for item in (d1, d2):
    d3.update(item)

print(d3)

my_list = ["car", "Ford", "flower", "Tulip"]

t = tuple(my_list)
print(t)

def fun(x):
    global y
    y = x * x
    return y


fun(2)
print(y)

def any():
    print(var + 1, end='')


var = 1
any()
print(var)

my_tuple=(1,2,3)
my_tuple[1] = my_tuple[1] + my_tuple[0]
print(my_tuple)

my_list = ['Mary', 'had', 'a', 'little', 'lamb']


def my_list(my_list):
    del my_list[3]
    my_list[3] = 'ram'


print(my_list(my_list))

def fun(x, y, z):
    return x + 2 * y + 3 * z


print(fun(0, z=1, y=3))

def fun(inp=2, out=3):
    return inp * out


print(fun(out=2))

tup = (1, 2, 4, 8)
tup = tup[1:-1]
tup = tup[0]
print(tup)

def func_1(a):
    return a ** a


def func_2(a):
    return func_1(a) * func_1(a)


print(func_2(2))

def func(a, b):
    return a ** a


print(func(2))

dictionary = {}
my_list = ['a', 'b', 'c', 'd']

for i in range(len(my_list) - 1):
    dictionary[my_list[i]] = (my_list[i], )

for i in sorted(dictionary.keys()):
    k = dictionary[i]
    print(k)

def fun(x):
    x += 1
    return x


x = 2
x = fun(x + 1)
print(x)

def f(x):
    if x == 0:
        return 0
    return x + f(x - 1)


print(f(3))

my_list = [3, 1, -2]
print(my_list[my_list[-1]])

my_list = [1, 2, 3, 4]
print(my_list[-3:-2])

vals = [0, 1, 2]
vals[0], vals[2] = vals[2], vals[0]
print(vals)

my_list_1 = [1, 2, 3]
my_list_2 = []
for v in my_list_1:
    my_list_2.insert(0, v)
print(my_list_2)

my_list = [1, 2, 3]
for v in range(len(my_list)):
    my_list.insert(1, my_list[v])
print(my_list)

my_list = [i for i in range(-1, 2)]
print(my_list)

t = [[3-i for i in range (3)] for j in range (3)]
s = 0
for i in range(3):
    s += t[i][i]
print(s)

my_list = [[0, 1, 2, 3] for i in range(2)]
print(my_list[2][0])

nums = [1, 2, 3]
vals = nums
del vals[1:2]
print(sum(vals))

vals = [0, 1, 2]
vals.insert(0, 1)
del vals[1]
print(sum(vals))

a = 1
b = 0
c = a & b
d = a | b
e = a ^ b

print(c + d + e)

z = 10
y = 0
x = y < z and z > y or y > z and z < y
print(x)

var = 1
while var < 10:
    print("#")
    var = var << 1

var = 0
while var < 6:
    var += 1
    if var % 2 == 0:
        continue
    print("#")

i = 0
while i <= 5 :
    i += 1
    if i % 2 == 0:
      break
    print("*")

x = 1
x = x == x
print(x)

x = input()
y = int(input())

print(x * y)

x = 1 / 2 + 3 // 3 + 4 ** 2
print(x)

print(\n)